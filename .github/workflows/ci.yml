name: CI Testing
on:
    push:
        branches:
            - dev
            - staging
            - main
    pull_request:
        branches:
            - dev
            - staging
            - main

jobs:
    test:
        name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node_version: ["16"]
                os: [ubuntu-latest, windows-latest, macos-latest]
        environment: test
        env:
            ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}
            API_HOSTNAME: ${{ secrets.API_HOSTNAME }}
            CLIENT_HOSTNAME: ${{ secrets.CLIENT_HOSTNAME }}
            DB_URL: ${{ secrets.DB_URL }}
            DOPPLER_CONFIG: ${{ secrets.DOPPLER_CONFIG }}
            DOPPLER_ENVIRONMENT: ${{ secrets.DOPPLER_ENVIRONMENT }}
            DOPPLER_PROJECT: ${{ secrets.DOPPLER_PROJECT }}
            EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
            EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
            EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
            EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
            EMAIL_SERVER: ${{ secrets.EMAIL_SERVER }}
            EMAIL_USER: ${{ secrets.EMAIL_USER }}
            ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
            NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
            NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        steps:
            - name: Clone Repository
              uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node_version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node_version }}

            - name: Install
              run: |
                  echo "üì• Installing dependencies..."
                  npm install
                  echo "üõ†Ô∏è Building Prisma..."
                  npm run build:prisma
                  echo "üß± Generating Prisma schema..."
                  npm run generate

            - name: Format and Lint
              run: |
                  echo "üßπ Formatting..."
                  npm run format
                  echo "üßº Linting..."
                  npm run lint

            - name: Test
              run: |
                  echo "üî¨ Testing backend API..."
                  echo "‚è≥ Please hold. This might take a while..."
                  npm test
                  echo "üåü Testing complete!"

            - name: Test Report
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                  name: JEST Tests
                  path: reports/jest-*.xml
                  reporter: jest-junit
                  list-suites: all
                  list-tests: all
                  max-annotations: 10
                  fail-on-error: true
