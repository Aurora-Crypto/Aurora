generator client {
    provider = "prisma-client-js"
}

generator jsonSchema {
    provider              = "prisma-json-schema-generator"
    output                = "../docs/schemas"
    includeRequiredFields = "true"
}

datasource db {
    provider = "mongodb"
    url      = env("DB_URL")
}

model Wallet {
    address    String   @id @map("_id")
    readOnly   Boolean? @default(true)
    seedPhrase String?  @default("")
    userIds    String[] @db.ObjectId
    users      User[]   @relation(fields: [userIds], references: [id])
}

enum TxnTag {
    GIFT
    LOSS
    DONATION
    MARGIN_FEE
    FORK
    AIRDROP
    MINED
    PAYMENT
    STAKED
    MARGIN
    MARGIN_REBATE
    INTEREST
    INCOME
}

type Transaction {
    id               String   @default(uuid())
    date             DateTime @default(now())
    receivedQuantity Float    @default(0)
    receivedCurrency String   @default("")
    sentQuantity     Float    @default(0)
    sentCurrency     String   @default("")
    feeAmount        Float    @default(0)
    feeCurrency      String   @default("")
    tag              TxnTag   @default(PAYMENT)
}

model User {
    id               String        @id @default(auto()) @map("_id") @db.ObjectId
    email            String        @unique
    name             String?
    processorAPIKeys String[]
    exchangeAPIKeys  String[]
    walletAddresses  String[]      @unique
    wallets          Wallet[]      @relation(fields: [walletAddresses], references: [address])
    transactions     Transaction[]

    @@index([transactions.id])
}
